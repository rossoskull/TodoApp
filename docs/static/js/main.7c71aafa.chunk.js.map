{"version":3,"sources":["components/layout/Header/LoggedInButtons.js","store/actions/userActions.js","components/layout/Header/LoggedOutButtons.js","components/layout/pallette.js","components/layout/Header/Header.js","components/auth/Login/Login.js","components/auth/Signup/Signup.js","components/todos/CreateTodo/CreateTodo.js","store/actions/todoActions.js","components/todos/DisplayTodo/DisplayTodo.js","App.js","store/reducers/todoReducer.js","store/reducers/userReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","logout","getState","_ref2","getFirebase","then","type","catch","e","_ref","styles","react_default","a","createElement","react","index_es","component","NavLink","to","style","buttons","onClick","LoggedOutButtons","exact","pallette","forestGreen","jadeGreen","kellyGreen","teaGreen","state","firebase","marginRight","color","fontSize","appbar","backgroundColor","Buttons","auth","isEmpty","Header_LoggedOutButtons","Header_LoggedInButtons","position","variant","marginLeft","Login","email","password","handleSubmit","preventDefault","_this","props","loginUser","handleChange","setState","Object","defineProperty","target","id","value","this","onSubmit","name","className","align","placeholder","onChange","textAlign","authError","message","margin","width","Redirect","Component","user","signInWithEmailAndPassword","Signup","fname","lname","console","log","signUp","_ref3","getFirestore","createUserWithEmailAndPassword","res","collection","doc","uid","set","err","CreateTodo","title","author","body","status","profile","authId","createTodo","todo","add","objectSpread","date","Date","DisplayTodo","_this$props","todos","colorCode","0","1","2","filter","t","map","key","marginBottom","updateTodo","deleteTodo","compose","firestore","ordered","delete","update","firestoreConnect","App","BrowserRouter","layout_Header_Header","Switch","Route","path","render","auth_Login_Login","auth_Signup_Signup","todos_CreateTodo_CreateTodo","todos_DisplayTodo_DisplayTodo","initState","todoReducer","arguments","length","undefined","action","todoError","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbconfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","ReactDOM","document","getElementById","firebaseAuthIsReady","es","src_App_0"],"mappings":"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","file":"static/js/main.7c71aafa.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Button } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\nimport { logoutUser } from '../../../store/actions/userActions'\nimport { connect } from 'react-redux'\n\nconst LoggedInButtons = ({styles, logout}) => {\n    return (\n        <Fragment>\n            <Button component={NavLink} to='/TodoApp/create' style={styles.buttons}>Create Todo</Button>\n            <Button component={NavLink} to='/TodoApp/display' style={styles.buttons}>Display</Button>\n            <Button style={styles.buttons} onClick={logout}>Log Out</Button>\n        </Fragment>\n    )\n}\n\nconst mapActionToProps = dispatch => {\n    return {\n        logout: () => dispatch(logoutUser())\n    }\n}\n\nexport default connect(null, mapActionToProps)(LoggedInButtons)","export const loginUser = user => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n        firebase.auth().signInWithEmailAndPassword(\n            user.email,\n            user.password\n        ).then(() => {\n            dispatch({type: 'LOGIN'})\n        }).catch(e => {\n            dispatch({type: 'LOGIN_ERROR', e})\n        })\n    }\n}\n\nexport const logoutUser = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n        firebase.logout()\n        .then(() => {\n            dispatch({type: 'LOGOUT_USER'})\n        })\n        .catch(e => {\n            dispatch({type: 'LOGOUT_USER_ERROR', e})\n        })\n    }\n}\n\nexport const signUp = user => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase()\n        firebase.auth().createUserWithEmailAndPassword(\n            user.email,\n            user.password\n        ).then(res => {\n            return getFirestore().collection('users').doc(res.user.uid).set({\n                fname: user.fname,\n                lname: user.lname\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React, { Fragment } from 'react'\nimport { Button } from '@material-ui/core'\nimport { NavLink } from 'react-router-dom'\n\nconst LoggedOutButtons = ({styles}) => {\n    return (\n        <Fragment>\n            <Button component={NavLink} exact to='/TodoApp/' style={styles.buttons}>Log In</Button>\n            <Button component={NavLink} to='/TodoApp/signup' style={styles.buttons}>Sign Up</Button>\n        </Fragment>\n    )\n}\n\nexport default LoggedOutButtons","const pallette = {\n    forestGreen: '#0b6623',\n    jadeGreen: '#00A86B',\n    kellyGreen: '#4CBB17',\n    teaGreen: '#D0F0C0'\n}\n\nexport default pallette","import React from 'react'\nimport { AppBar, Toolbar, Typography } from '@material-ui/core'\nimport LoggedInButtons from './LoggedInButtons'\nimport LoggedOutButtons from './LoggedOutButtons'\nimport pallette from '../pallette'\nimport { connect } from 'react-redux'\n\nconst Header = ({firebase}) => {\n    const styles = {\n        buttons: {\n            marginRight: '5px',\n            color: 'rgb(230,230,230)',\n            fontSize: '17px'\n        },\n        appbar: {\n            backgroundColor: pallette.forestGreen,\n        }\n    }\n\n    const Buttons = (firebase.auth.isEmpty) ? (<LoggedOutButtons styles={styles}/>) : (<LoggedInButtons styles={styles}/>)\n    \n    return(\n        <header>\n            <AppBar style={styles.appbar} position='relative'>\n                <Toolbar>\n                    <Typography variant='display1' color='inherit'>\n                        React Todo App\n                    </Typography>\n                    <div style={{marginLeft: 'auto'}}> \n                    {Buttons}                       \n                    </div>\n                </Toolbar>\n            </AppBar>\n        </header>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        firebase: state.firebase\n    }\n}\n\nexport default connect(mapStateToProps)(Header)","import React, { Component, Fragment } from 'react'\nimport { Typography, Button, Card, CardContent } from '@material-ui/core';\nimport pallette from '../../layout/pallette'\nimport { connect } from 'react-redux'\nimport { loginUser } from '../../../store/actions/userActions'\nimport { Redirect } from 'react-router-dom'\nimport './Login.css'\n\nclass Login extends Component {\n    state = {\n        'email': '',\n        'password': ''\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.loginUser(this.state)\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n        \n        if ( !this.props.firebase.auth.isEmpty ) { return <Redirect to=\"/TodoApp/display\" /> }\n\n        return(\n            <Fragment>\n                <form onSubmit={this.handleSubmit} name='loginForm'>\n                    <Card className='form-card'>\n                        <CardContent>\n                            <Typography variant='display1' align='center'>\n                                Log In\n                            </Typography>                    \n                            <input type='email' placeholder='Email ID' id='email' onChange={this.handleChange} /><br />\n                            <input type='password' placeholder='Password' id='password' onChange={this.handleChange} /><br />\n                            <p style={{textAlign: 'center', color: 'red'}} >\n                                {(this.props.authError) ? this.props.authError.message : null}\n                            </p>\n                            <Button\n                                type='submit'\n                                id='submit-button'\n                                style={{\n                                    backgroundColor: pallette.jadeGreen,\n                                    margin: 'auto',\n                                    color: 'white',\n                                    width: '125px'\n                                }}>\n                                Submit\n                            </Button>\n                        </CardContent>                   \n                    </Card>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst mapDispathToComponent = dispatch => {\n    return {\n        loginUser: user => dispatch(loginUser(user))\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        firebase: state.firebase,\n        authError: state.user.authError\n    }\n}\n\nexport default connect(mapStateToProps, mapDispathToComponent)(Login)","import React, { Component, Fragment } from 'react'\nimport { Typography, CardContent, Card } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\nimport pallette from '../../layout/pallette'\nimport { signUp } from '../../../store/actions/userActions'\nimport './Signup.css'\n\nclass Signup extends Component {\n\n    state = {\n        fname: '',\n        lname: '',\n        email: '',\n        password: ''\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        console.log(this.state)\n        this.props.signUp(this.state)\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n\n        if ( !this.props.firebase.auth.isEmpty ) {\n            return (<Redirect to=\"/TodoApp/display\" />)\n        }\n\n        return(\n            <Fragment>\n                <form onSubmit={this.handleSubmit} name='loginForm'>\n                    <Card className='form-card-signup'>\n                        <CardContent>\n                            <Typography variant='display1' align='center'>\n                                Sign Up\n                            </Typography>\n                        \n                            <input type='text' placeholder='First Name' id='fname' onChange={this.handleChange} /><br />\n                            <input type='text' placeholder='Last Name' id='lname' onChange={this.handleChange} /><br />\n                            <input type='email' placeholder='Email ID' id='email' onChange={this.handleChange} /><br />\n                            <input type='password' placeholder='Password' id='password' onChange={this.handleChange} /><br />\n                            <p style={{textAlign: 'center', color: 'red'}} >\n                                {(this.props.authError) ? this.props.authError.message : null}\n                            </p>\n                            <Button\n                                type='submit'\n                                id='submit-button'\n                                style={{\n                                    backgroundColor: pallette.jadeGreen,\n                                    margin: 'auto',\n                                    color: 'white',\n                                    width: '125px'\n                                }}>\n                                Submit\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        firebase: state.firebase,\n        authError: state.user.authError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signUp: user => dispatch(signUp(user))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React, { Component, Fragment } from 'react'\nimport { Typography, Card, CardContent, Button } from '@material-ui/core'\nimport pallette from '../../layout/pallette'\nimport { connect } from 'react-redux'\nimport { createTodo } from '../../../store/actions/todoActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateTodo extends Component {\n\n    state = {\n        title: '',\n        author: '',\n        body: '',\n        status: 0\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        let state = this.state\n        state.author = this.props.profile.fname + ' ' + this.props.profile.lname\n        state.authId = this.props.auth.uid\n        this.props.createTodo(state)\n    }\n\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n\n        if ( this.props.auth.isEmpty ) {\n            return <Redirect to='/TodoApp/' />\n        }\n\n        return(\n            <Fragment>\n                \n                <form name='addtodo' onSubmit={this.handleSubmit}>\n                    <Card className='form-card'>\n                        <CardContent>\n                            <Typography variant='display1' align='center'>\n                                Create Todo\n                            </Typography>\n                            <input name='title' type='text' placeholder='Title' onChange={this.handleChange} /><br />\n                            <textarea name='body' placeholder='Body' onChange={this.handleChange} /><br />\n                            <Button\n                                type='submit'\n                                id='submit-button'\n                                style={{\n                                    backgroundColor: pallette.jadeGreen,\n                                    margin: 'auto',\n                                    color: 'white',\n                                    width: '125px'\n                                }}>\n                                Create Todo\n                            </Button>\n                        </CardContent>\n                    </Card>\n                </form>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile,\n    }\n}\n\nconst mapActionToDispatch = dispatch => {\n    return {\n        createTodo: todo => dispatch(createTodo(todo))\n    }\n}\n\nexport default connect(mapStateToProps, mapActionToDispatch)(CreateTodo)","export const createTodo = todo => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        firestore.collection('todos').add({\n            ...todo,\n            date: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_TODO', todo})\n        }).catch(e => {\n            dispatch({type: 'CREATE_TODO_ERROR', err: e})\n        })\n    }\n}\n\nexport const deleteTodo = id => {\n    return (dispatch, getState, { getFirestore }) => {\n        const firestore = getFirestore()\n        firestore.delete({ collection: 'todos', doc: id})\n        .then(() => {\n            console.log('deleted')\n            dispatch({type: 'DELETE_TODO'})\n        })\n        .catch(e => {\n            console.log('Error deleting', e)\n            dispatch({type: 'DELETE_TODO_ERROR', err: e})\n        })\n    }\n}\n\nexport const updateTodo = todo => {\n    return (dispatch, getState, {getFirestore}) => {\n        const firestore = getFirestore()\n        firestore.collection('todos').doc(todo.id).update({\n            status: todo.status\n        }).then(() => {\n            dispatch({type: 'UPDATE_TODO_SUCCESS'})\n        }).catch(e => {\n            dispatch({type: 'UPDATE_TODO_ERROR', e})\n        })\n    }\n}","import React, { Component } from 'react'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { Card, Typography, CardContent, CardActions, Button } from '@material-ui/core'\nimport { deleteTodo, updateTodo } from '../../../store/actions/todoActions'\nimport { Redirect } from 'react-router-dom'\n\nclass DisplayTodo extends Component {\n    render() {\n        let { todos, auth } = this.props\n\n        if ( auth.isEmpty ) {\n            return (<Redirect to=\"/TodoApp/\" />)\n        }\n\n        const colorCode = {\n            0: 'rgb(255, 255, 128)',\n            1: 'rgb(191, 255, 128)',\n            2: 'rgb(255, 153, 102)'\n        }\n\n        if ( todos ) {\n            todos = todos.filter(t => {\n                return (t.authId === auth.uid)\n            })\n        }\n        \n        return(\n            <div className='todos'>\n                <Typography variant='display1' align='center'>\n                    Todos\n                </Typography>\n                {todos && todos.map(t => {\n                    return(\n                        <Card\n                            key={t.id}\n                            style={{\n                                marginBottom: '10px',\n                                backgroundColor: colorCode[t.status]\n                            }}\n                          >\n                            <CardContent>\n                                <Typography variant='h5'>\n                                    {t.title}\n                                </Typography>\n                                <Typography variant='body2'>\n                                    {t.author}\n                                </Typography>\n                                <Typography variant='body1'>\n                                    {t.body}\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button\n                                    style={{\n                                        backgroundColor: '#33cc33',\n                                        color: 'white'\n                                    }}\n                                    onClick={() => {this.props.updateTodo({id: t.id, status: 1})}}\n                                >\n                                    Done!\n                                </Button>\n\n                                <Button\n                                    style={{\n                                        backgroundColor: '#ff6600',\n                                        color: 'white'\n                                    }}\n                                    onClick={() => {this.props.updateTodo({id: t.id, status: 2})}}\n                                >\n                                    Not Done\n                                </Button>\n\n                                <Button\n                                    style={{\n                                        backgroundColor: '#ff3333',\n                                        color: 'white'\n                                    }}\n                                    onClick={() => {this.props.deleteTodo(t.id)}}\n                                >\n                                    Delete\n                                </Button>\n\n                            </CardActions>\n                        </Card>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToAction = state => {\n    return {\n        todos: state.firestore.ordered.todos,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapActionToState = dispatch => {\n    return {\n        deleteTodo: id => dispatch(deleteTodo(id)),\n        updateTodo: id => dispatch(updateTodo(id))\n    }\n}\n\nexport default compose(\n    connect(mapDispatchToAction, mapActionToState),\n    firestoreConnect([{ collection: 'todos' }])\n)(DisplayTodo)","import React, { Component, Fragment } from 'react'\nimport './App.css'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Header from './components/layout/Header/Header'\nimport Login from './components/auth/Login/Login'\nimport Signup from './components/auth/Signup/Signup'\nimport CreateTodo from './components/todos/CreateTodo/CreateTodo'\nimport DisplayTodo from './components/todos/DisplayTodo/DisplayTodo';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Fragment>\n          <Header />\n          <div className='container main-body'>\n            <Switch>\n              <Route exact path='/TodoApp/' render={() => {return (<Login />)}}></Route>\n              <Route exact path='/TodoApp/signup' render={() => {return (<Signup />)}}></Route>\n              <Route exact path='/TodoApp/create' render={() => {return (<CreateTodo />)}}></Route>\n              <Route exact path='/TodoApp/display' render={() => {return (<DisplayTodo />)}}></Route>\n            </Switch>\n          </div>\n        </Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","const initState = {\n    todos: [\n        {id: 1, title: 'First Todo', author: 'Jay Mistry', body: 'This is the first todo.', status: 0},\n        {id: 1, title: 'Second Todo', author: 'Jay Mistry', body: 'Second Todo this is!', status: -1},\n        {id: 1, title: 'Third Todo', author: 'Jay Mistry', body: 'This is the third todododo.', status: 1},   \n    ]\n}\n\nconst todoReducer = (state = initState, action) => {\n    // Handle different actions\n    switch(action.type) {\n        case 'CREATE_TODO':\n            return {\n                ...state,\n                todoError: null\n            }\n\n        case 'CREATE_TODO_ERROR':\n            return {\n                ...state,\n                todoError: action.e\n            }\n\n        case 'DELETE_TODO':\n            return {\n                ...state,\n                todoError: null\n            }\n\n        case 'DELETE_TODO_ERROR':\n            return {\n                ...state,\n                todoError: action.e\n            }\n\n        case 'UPDATE_TODO_SUCCESS':\n            return {\n                ...state,\n                todoError: null\n            }\n\n        case 'UPDATE_TODO_ERROR':\n            return {\n                ...state,\n                todoError: action.e\n            }\n\n        default:\n            return state\n    }\n    \n}\n\nexport default todoReducer","const initState = {\n    email: '',\n    password: ''\n}\n\nexport const userReducer = (state = initState, action) => {\n    \n    switch(action.type) {\n        case 'LOGIN':\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: action.e\n            }\n\n        case 'LOGOUT_USER':\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'LOGOUT_USER_ERROR':\n            return {\n                ...state,\n                authError: action.e\n            }\n        \n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            }\n\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err\n            }\n        \n        default:\n            break\n    }\n    \n    return state\n}","import { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n// Import other reducers\nimport todoReducer from './todoReducer'\nimport { userReducer } from './userReducer';\n\nexport const rootReducer = combineReducers({\n    todo: todoReducer,\n    user: userReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n}) ","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nlet config = {\n    apiKey: \"AIzaSyCZLwQrT_RwtDnxnMnxyiKZ8jpjoPq1ftM\",\n    authDomain: \"react-firebase-todoapp-plm.firebaseapp.com\",\n    databaseURL: \"https://react-firebase-todoapp-plm.firebaseio.com\",\n    projectId: \"react-firebase-todoapp-plm\",\n    storageBucket: \"react-firebase-todoapp-plm.appspot.com\",\n    messagingSenderId: \"1089263693101\"\n}\n\nfirebase.initializeApp(config)\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Redux & firebase\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport { rootReducer } from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase'\nimport { getFirestore, reduxFirestore } from 'redux-firestore'\nimport fbconfig from './config/fbconfig'\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reactReduxFirebase(fbconfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n        reduxFirestore(fbconfig)\n    )\n)\n\nReactDOM.render(<h3>Loading App</h3>, document.getElementById('root'))\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'))\n})"],"sourceRoot":""}